#ifndef MAPA
#define MAPA

int mapH=15;
int mapW=25;
    
int casillaH;
int casillaW;

int AH;
int AW;

int BH;
int BW;

/*
O: Casilla vacia
_: Camino que seguiran los enemigos
X: Casilla ocupada / terreno donde no se puede construir
A: Inicio ("Spawn")
B: Final
*/



char mapGraphics[15][25]={
     //   0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //0
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //1
        {'A','_','_','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //2
        {'O','O','_','O','O','_','_','_','_','O','O','O','O','_','_','_','_','_','_','O','O','O','O','O','O',}, //3
        {'O','O','_','O','O','_','O','O','_','O','O','O','O','_','O','O','O','O','_','O','O','O','O','O','O',}, //4
        {'O','O','_','O','O','_','O','O','_','O','O','O','O','_','_','O','O','O','_','O','O','O','O','O','O',}, //5
        {'O','O','_','O','O','_','O','O','_','O','O','O','O','O','_','O','O','O','_','O','O','O','O','O','X',}, //6
        {'O','O','_','_','_','_','O','O','_','O','O','O','O','O','_','O','O','O','_','O','O','O','_','_','B',}, //7
        {'O','O','O','O','O','O','O','O','_','O','O','O','O','O','_','O','O','O','_','O','O','O','_','O','O',}, //8
        {'O','O','O','O','O','O','O','O','_','_','_','_','_','_','_','O','O','O','_','_','O','O','_','O','O',}, //9
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','_','_','_','_','O','O',}, //10
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //11
        {'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X',}, //12
        {'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X',}, //13
        {'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X',}  //14
        };


char mapFly[15][25]={
     //   0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //0
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //1
        {'A','_','_','_','_','_','_','_','_','_','_','_','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //2
        {'O','O','O','O','O','O','O','O','O','O','O','_','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //3
        {'O','O','O','O','O','O','O','O','O','O','O','_','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //4
        {'O','O','O','O','O','O','O','O','O','O','O','_','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //5
        {'O','O','O','O','O','O','O','O','O','O','O','_','_','_','_','_','_','_','_','_','_','_','_','_','_',}, //6
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','B',}, //7
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //8
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //9
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //10
        {'O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O','O',}, //11
        {'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X',}, //12
        {'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X',}, //13
        {'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X',}  //14
        };

  
//Obtener las cordenadas del inicio y el final
void setStart ()
{
     for (int h=0; h<mapH; h++)
     {
         for (int w=0; w<mapW; w++)
         {
             if (mapGraphics[h][w]=='A')
             {
                 AH=h; AW=w;                           
             }
             if (mapGraphics[h][w]=='B')
             {
                 BH=h; BW=w;                           
             }
         }
     }
}
END_OF_FUNCTION(setStart)  
 
     
# endif
